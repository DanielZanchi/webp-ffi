require 'ffi-compiler/compile_task'

# Try to detect Homebrew (Mac), otherwise fallback to /usr paths (Linux)
brew_prefix = `which brew >/dev/null 2>&1 && brew --prefix webp`.chomp
if brew_prefix.empty?
  include_path = "/usr/include"
  lib_path     = "/usr/lib"
else
  include_path = "#{brew_prefix}/include"
  lib_path     = "#{brew_prefix}/lib"
end

FFI::Compiler::CompileTask.new('webp_ffi') do |c|
  c.have_header?('stdio.h', '/usr/include')
  c.have_func?('puts')
  c.have_library?('z')

  # webp
  c.have_header?('decode.h', include_path)
  c.have_header?('encode.h', include_path)
  c.have_func?('WebPDecoderConfig')
  c.have_func?('WebPGetInfo')
  c.have_library?('webp', lib_path)

  # other libs
  c.have_library?('png')
  c.have_library?('jpeg')
  c.have_library?('tiff')

  # Allow manual overrides
  c.ldflags << " -L#{lib_path}"
  c.cflags << " -I#{include_path}"
  c.ldflags << ENV['LD_FLAGS'] if ENV['LD_FLAGS']
  c.cflags << ENV['C_FLAGS'] if ENV['C_FLAGS']
end
